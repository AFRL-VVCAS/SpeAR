Specification microwave

Imports:
	import "microwave_definitions.spear"
	import "keypad_processing.spear"
	import "compute_time.spear"
	import "reverse_time.spear"
	import "mode_logic.spear"

Inputs:
	user_input : user_input_type
	door_closed : bool

Outputs:
	left_digit : int
	middle_digit : int
	right_digit : int

State:
	microwave_mode : mode_type
	seconds_remaining : int

Macros:
	clear : bool = (user_input == CLEAR)
	start : bool = (user_input == START)
	seconds_to_cook : int = left_digit * 60 + middle_digit * 10 + right_digit

Assumptions:

DerivedRequirements:
	r0 = |microwave_mode,seconds_remaining| == spec mode_logic(clear, start, door_closed, seconds_to_cook)
	r2 = (microwave_mode == SETUP) implies |left_digit,middle_digit,right_digit| == spec keypad_processing(user_input)
	r3 = (microwave_mode <> SETUP) implies |left_digit,middle_digit,right_digit| == spec reverse_time(seconds_remaining)
	r4 = (microwave_mode == SETUP) implies seconds_to_cook == spec compute_time(left_digit,middle_digit,right_digit)
	r5 = (microwave_mode <> SETUP) implies seconds_to_cook == previous seconds_to_cook with initial value 0

Requirements: 
	p_init = initially(microwave_mode == SETUP)
	p0 = microwave_mode == COOKING => door_closed
	p1 = before start implies microwave_mode == SETUP
	p2 = 0 <= left_digit and left_digit <= 9
	p3 = 0 <= middle_digit and middle_digit <= 9
	p4 = 0 <= right_digit and right_digit <= 9
	